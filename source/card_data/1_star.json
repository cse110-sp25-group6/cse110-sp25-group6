[
  {
    "id": 26,
    "name": "Purity Ogre",
    "image": "OCaml.png",
    "rarity": 1,
    "lore": "A hulking giant forged from immutable constructs, smashing side effects with unyielding force. It speaks in recursive riddles, demanding pure thought from all who approach. Beneath its fury lies a love for elegant pattern matching and abstract logic. In its domain, only pure functions may survive.\n\nOCaml is a functional programming language that emphasizes type safety, pattern matching, and immutable data, offering a powerful module system and efficient native code compilation.",
    "stats": {
      "health": 95,
      "damage": 38
    }
  },
  {
    "id": 27,
    "name": "Monad Harpy",
    "image": "Haskell.png",
    "rarity": 1,
    "lore": "This majestic harpy soars on wings of pure functions, refusing to descend until its monads are satisfied. It hoards treasures of lazily evaluated expressions, striking when its prey least expects it. Its song resonates with type signatures and infinite lists that shimmer like stars. Mortals claim its true form eludes even the most devoted scholars.\n\nHaskell is a purely functional, statically typed programming language with lazy evaluation, leveraging monads for side effects and strong type inference to ensure code correctness.",
    "stats": {
      "health": 85,
      "damage": 32
    }
  },
  {
    "id": 29,
    "name": "Ownership Revenant",
    "image": "Rust.png",
    "rarity": 1,
    "lore": "An ethereal guardian that enforces memory safety with unwavering vigilance. It strikes down null pointers and data races with its razor-sharp ownership blade. Its presence reminds all that safety need not compromise performance. Travelers whisper that its curse can resurrect fallen systems into stable forms.\n\nRust is a systems programming language that guarantees memory safety through its ownership model and borrowing rules, preventing data races at compile time while offering high performance.",
    "stats": {
      "health": 100,
      "damage": 42
    }
  },
  {
    "id": 30,
    "name": "Assembler Cyclops",
    "image": "C.png",
    "rarity": 1,
    "lore": "A one-eyed giant wading through raw machine code, wielding pointers like deadly spears. Its simplistic logic belies deep complexity, ensnaring coders in potential buffer overflows. It speaks only in whispered assembly, enforcing strict respect for hardware boundaries. Legend says it once rewrote entire operating systems by hand.\n\nC is a procedural systems programming language that provides low-level access to memory through pointers, enabling fine-grained control over hardware and efficient performance.",
    "stats": {
      "health": 90,
      "damage": 35
    }
  },
  {
    "id": 31,
    "name": "Concurrency Gargoyle",
    "image": "Go.png",
    "rarity": 1,
    "lore": "A stony sentinel that spawns countless lightweight threads, overwhelming adversaries in parallel. Its stone wings flap in unison, orchestrating data flows that devour both time and space. Each gargoyle carries a channel of doom, broadcasting across realms with blistering speed. Visitors marvel at its mastery of simultaneous assaults.\n\nGo (Golang) is a statically typed, compiled language designed at Google, with built-in support for concurrency through goroutines and channels, emphasizing simplicity and performance for systems and networked applications.",
    "stats": {
      "health": 110,
      "damage": 40
    }
  },
  {
    "id": 43,
    "name": "Compile Cerberus",
    "image": "C-NN.png",
    "rarity": 1,
    "lore": "A three-headed guard that enforces compile-time checks with unyielding rigor. Each head snarls syntax errors, preventing undefined behavior from entering its realm. It prowls memory gates, snarling at any rogue pointer that dares approach. Only the most disciplined coders survive its ceaseless vigilance.\n\nC-NN (Compile-Time Neural Network) refers to techniques that leverage compile-time metaprogramming (e.g., C++ templates) to build and optimize neural network architectures before runtime.",
    "stats": {
      "health": 120,
      "damage": 45
    }
  },
  {
    "id": 44,
    "name": "Regression Roc",
    "image": "R-NN.png",
    "rarity": 1,
    "lore": "A colossal roc perched atop high-dimensional clouds, using statistical metrics to guide its flight. It snatches samples with colossal talons, training its powerful wings on each catch. Its screech resonates across regressions, stirring ancient correlations in the air. Those who dare approach must prove their statistical prowess or be carried away.\n\nR-NN (Recurrent Neural Network) refers to neural networks with loops allowing information to persist across time steps, making them suitable for sequence modeling tasks such as language modeling and time series prediction.",
    "stats": {
      "health": 105,
      "damage": 38
    }
  },
  {
    "id": 71,
    "name": "Grammar Gargoyle",
    "image": "Context_Free_Grammar_(CFG).png",
    "rarity": 1,
    "lore": "This stony gargoyle enforces productions without regard for context, demanding perfect syntax from travelers. It guards ancient scrolls, ensuring every phrase follows its strict rules. Those who fail to present grammatically correct offerings are turned into motionless stone. Legends say it knows every rule but refuses to reveal them.\n\nA Context-Free Grammar (CFG) is a formal grammar in which production rules replace a single nonterminal symbol with a sequence of nonterminals and terminals, widely used to define programming language syntax and parse trees.",
    "stats": {
      "health": 100,
      "damage": 42
    }
  },
  {
    "id": 72,
    "name": "Deterministic Demon",
    "image": "DFA.png",
    "rarity": 1,
    "lore": "A demon that marches through states with unyielding consistency, capturing souls in finite loops. It offers no ambiguity, driving victims along a single path until their fate is sealed. Its presence chills the air with predictable inevitability. Many who challenge it quickly learn there is no alternative route.\n\nA Deterministic Finite Automaton (DFA) is a finite state machine where each state has exactly one transition for each input symbol, used for pattern matching and lexical analysis with guaranteed deterministic behavior.",
    "stats": {
      "health": 90,
      "damage": 36
    }
  },
  {
    "id": 73,
    "name": "Nondeterministic Naga",
    "image": "NFA.png",
    "rarity": 1,
    "lore": "A serpent of many possible paths, branching unpredictably to confuse unwary foes. It slithers through states without warning, striking from any direction. Those caught in its coils feel multiple fates converge at once. Scholars claim its power lies in embracing the uncertainty of chance.\n\nA Nondeterministic Finite Automaton (NFA) is a finite state machine where transitions for a given input symbol may lead to multiple next states (or none), allowing compact representation of patterns that can be converted to an equivalent DFA.",
    "stats": {
      "health": 95,
      "damage": 35
    }
  },
  {
    "id": 75,
    "name": "Nand Sentinel",
    "image": "NAND_gate.png",
    "rarity": 1,
    "lore": "A humble golem born from the simplest logic gate, its presence denies both inputs with unwavering reliability. It stands sentinel over primitive circuits, ensuring no forbidden combination passes. Its single commandment echoes across every flip-flop it guards. Engineers say every complex truth can be built from its modest foundation.\n\nA NAND Gate is a digital logic gate that outputs false only when all its inputs are true; because it is functionally complete, any Boolean function can be implemented using only NAND gates.",
    "stats": {
      "health": 85,
      "damage": 38
    }
  },
  {
    "id": 76,
    "name": "Conjunct Angel",
    "image": "AND_gate.png",
    "rarity": 1,
    "lore": "An ethereal being that grants power only when both its sacred inputs are true. Its radiant wings spread symmetrical beams of pure logic. Those who present valid combinations bask in its illuminating grace. Worshippers know unity is the only path to its favor.\n\nAn AND Gate is a digital logic gate that outputs true only when all its inputs are true, fundamental to building combinational logic circuits and boolean expressions.",
    "stats": {
      "health": 90,
      "damage": 40
    }
  },
  {
    "id": 77,
    "name": "Inclusive Ogre",
    "image": "OR_Gate.png",
    "rarity": 1,
    "lore": "A fierce ogre that awakens when at least one input glows with power. It charges at intruders with thunderous force, its roar powered by inclusive logic. Its heavy footsteps symbolize every possible path converging into a singular might. Many believe it embodies the purest form of choice.\n\nAn OR Gate is a digital logic gate that outputs true if at least one of its inputs is true, used to build logic circuits that require inclusion-based conditions.",
    "stats": {
      "health": 80,
      "damage": 30
    }
  },
  {
    "id": 78,
    "name": "Inverter Nymph",
    "image": "NOT_gate.png",
    "rarity": 1,
    "lore": "A playful nymph that flips truth into falsehood with a mischievous grin. She dances between zeros and ones, reflecting lies in her enchanted mirror. Those caught in her gaze find their logic turned inside out. Her laughter lingers, reminding all that perception can be a fickle thing.\n\nA NOT Gate (Inverter) is a digital logic gate that outputs the opposite (negation) of its single input, fundamental for creating complemented signals in combinational circuits.",
    "stats": {
      "health": 95,
      "damage": 42
    }
  },
  {
    "id": 79,
    "name": "Exclusive Fiend",
    "image": "XOR_gate.png",
    "rarity": 1,
    "lore": "A desert fiend that grants power only when its inputs differ, thriving in exclusive chaos. It revels in contradiction, striking whenever opposing forces collide. Its howl splits truth from falsehood, revealing hidden disparities in its wake. Scholars say it embodies the very essence of exclusive choice.\n\nAn XOR Gate (Exclusive OR) is a digital logic gate that outputs true only when exactly one of its two inputs is true, used in arithmetic circuits like binary addition (sum bit) and parity checks.",
    "stats": {
      "health": 100,
      "damage": 45
    }
  },
  {
    "id": 80,
    "name": "Null Prophet",
    "image": "NOR_gate.png",
    "rarity": 1,
    "lore": "A prophetic seer who forbids any spark of truth, granting power only when both inputs are false. Her presence extinguishes all light, weaving destinies where none may survive. Those who challenge her find themselves consumed by shadow and despair. Prophecies foretell that her silence is mightier than any roar.\n\nA NOR Gate is a digital logic gate that outputs true only when all its inputs are false; since it is functionally complete, any Boolean function can be implemented using only NOR gates.",
    "stats": {
      "health": 85,
      "damage": 36
    }
  },
  {
    "id": 81,
    "name": "Parity Guardian",
    "image": "XNOR_gate.png",
    "rarity": 1,
    "lore": "A mysterious creature that blesses unity, granting strength only when inputs perfectly match. It dwells in mirrored realms, enforcing balance above all else. Travelers seeking its favor must present identical offerings to pass. Legends claim it can mend broken bonds with a single, harmonious touch.\n\nAn XNOR Gate (Exclusive NOR) is a digital logic gate that outputs true only when both inputs are identical (both true or both false), often used for equality checks and parity generation.",
    "stats": {
      "health": 95,
      "damage": 39
    }
  }
]
